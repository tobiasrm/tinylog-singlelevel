#
# Tinylog
#	
#   For config details see http://www.tinylog.org/configuration 
#

tinylog.locale = en_US


# --------------------------------------------
# Singlelevel Console
# --------------------------------------------
# Define writer per each level. Set .singlelevel=false (or remove entry) to 
# reactivate normal console logger (prings .level or higher). 

# TRACE level writer
tinylog.writerTrace               = singlelevel-console
tinylog.writerTrace.level         = trace
tinylog.writerTrace.singlelevel   = true
tinylog.writerTrace.format        = {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 

## DEBUG level writer
#tinylog.writerDebug               = singlelevel-console
#tinylog.writerDebug.level         = debug
#tinylog.writerDebug.singlelevel   = true
#tinylog.writerDebug.format        = {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 
#
## INFO level writer
#tinylog.writerInfo                = singlelevel-console
#tinylog.writerInfo.level          = info
#tinylog.writerInfo.singlelevel    = true
#tinylog.writerInfo.format         = {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 

# WARNING level writer
tinylog.writerWarn                = singlelevel-console
tinylog.writerWarn.level          = warning
tinylog.writerWarn.singlelevel    = true
tinylog.writerWarn.format         = {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 

# ERROR level writer
tinylog.writerError               = singlelevel-console
tinylog.writerError.level         = error
tinylog.writerError.singlelevel   = true
tinylog.writerError.format        = {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 


