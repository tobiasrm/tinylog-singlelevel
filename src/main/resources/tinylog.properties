#
# Tinylog
#	
#   For config details see http://www.tinylog.org/configuration 
#

tinylog.locale = en_US


# --------------------------------------------
# Console
# --------------------------------------------
# Default tinylog console writer - will print assigned level and higher 

#tinylog.writerConsole 				= console
#tinylog.writerConsole.level 		= info
#tinylog.writerConsole.stream		= out
#tinylog.writerConsole.buffered		= true
#tinylog.writerConsole.format 		= {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 



# --------------------------------------------
# Single Level Console Writers 
# --------------------------------------------
# Singlelevel console writer, enables to restrict print out to assigned level
# - singlelevel = false - same behaviour as the tinylog default console writer
# - singlelevel = true - only assigned levels are printed.
#
# For coloring, we define a writer per each level (singleleve=true) and 
# and assign colors as ASCII codes in the format. Some foreground colors:
# - white: 	\u001B[97m
# - purple:	\u001B[34m
# - cyan: 	\u001B[36m
# - green:	\u001B[32m
# - yellow: \u001B[33m
# - red: 	\u001B[31m
# - light gray: \u001B[37m
# - dark gray: 	\u001B[90m
# Reset colors:	\u001B[0m

# For more color codes see: https://en.wikipedia.org/wiki/ANSI_escape_code

# NOTE that the ASCII color coding may not be supported by your IDE or terminal. 
# You may use the default tinylog 'console' (see above) without ASCII colors.

# TRACE level writer
tinylog.writerTrace 						= singlelevel-console
tinylog.writerTrace.level 				= trace
tinylog.writerTrace.stream				= out
tinylog.writerTrace.buffered				= true
tinylog.writerTrace.singlelevel			= true
tinylog.writerTrace.format 				= { }\u001B[97m{{level}|min-size=10} {\u001B[90m{date:yyyy-MM-dd HH:mm:ss}  \u001B[38;5;24m{class_name}:{line} - {method}()|min-size=80} \u001B[97m: \u001B[37m{message}\u001B[0m 

# DEBUG level writer
tinylog.writerDebug 						= singlelevel-console
tinylog.writerDebug.level 				= debug
tinylog.writerDebug.stream				= out
tinylog.writerDebug.buffered				= true
tinylog.writerDebug.singlelevel			= true
tinylog.writerDebug.format 				= { }\u001B[34m{{level}|min-size=10} {\u001B[90m{date:yyyy-MM-dd HH:mm:ss}  \u001B[38;5;24m{class_name}:{line} - {method}()|min-size=80} \u001B[97m: \u001B[37m{message}\u001B[0m 

# INFO level writer
tinylog.writerInfo 						= singlelevel-console
tinylog.writerInfo.level 				= info
tinylog.writerInfo.stream				= out
tinylog.writerInfo.buffered				= true
tinylog.writerInfo.singlelevel			= true
tinylog.writerInfo.format 				= { }\u001B[32m{{level}|min-size=10} {\u001B[90m{date:yyyy-MM-dd HH:mm:ss}  \u001B[38;5;24m{class_name}:{line} - {method}()|min-size=80} \u001B[97m: \u001B[37m{message}\u001B[0m 

# WARNING level writer
tinylog.writerWarn 						= singlelevel-console
tinylog.writerWarn.level 				= warning
tinylog.writerWarn.stream				= out
tinylog.writerWarn.buffered				= true
tinylog.writerWarn.singlelevel			= true
tinylog.writerWarn.format 				= { }\u001B[33m{{level}|min-size=10} {\u001B[90m{date:yyyy-MM-dd HH:mm:ss}  \u001B[38;5;24m{class_name}:{line} - {method}()|min-size=80} \u001B[97m: \u001B[37m{message}\u001B[0m 

# ERROR level writer
tinylog.writerError 						= singlelevel-console
tinylog.writerError.level 				= error
tinylog.writerError.stream				= out
tinylog.writerError.buffered				= true
tinylog.writerError.singlelevel			= true
tinylog.writerError.format 				= { }\u001B[31m{{level}|min-size=10} {\u001B[90m{date:yyyy-MM-dd HH:mm:ss}  \u001B[38;5;24m{class_name}:{line} - {method}()|min-size=80} \u001B[97m: \u001B[37m{message}\u001B[0m 



# --------------------------------------------
# RollingFile 
# --------------------------------------------

#tinylog.writerRollingfile 			= rollingfile
#tinylog.writerRollingfile.buffered 	= true
#tinylog.writerRollingfile.filename 	= log.txt
#tinylog.writerRollingfile.backups 	= 10
##tinylog.writerRollingfile.label 		= count
#tinylog.writerRollingfile.policies 	= startup, size: 25MB
#tinylog.writerRollingfile.format 	= {{{level}|min-size=7}  {date:yyyy-MM-dd HH:mm:ss}  {class_name}:{line} - {method}() |min-size=80} : {message} 


# --------------------------------------------
# Writer thread 
# --------------------------------------------
# Writing threads for higher performance.
# NOTE that you may need to shut it down programmatically. See documentation.
#tinylog.writingthread = true
#tinylog.writingthread.observe = main
#tinylog.writingthread.priority = 1